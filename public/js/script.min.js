/* Add class raw javascript */

function hasClass(ele,cls) {
    return !!ele.className.match(new RegExp('(\\s|^)'+cls+'(\\s|$)'));
}

function removeClass(element, className) {
    if (element && hasClass(element,className)) {
        var reg = new RegExp('(\\s|^)'+className+'(\\s|$)');
        element.className = ' ' + element.className.replace(reg,'') + ' ';
    }
}

function addClass(element, className) {
    if (element && !hasClass(element,className)) {
        element.className += '  '+ className + '  ';
    }
}


function ajaxify(linkEl, callback) {
	document.querySelectorAll(linkEl).forEach(function(el) {
		var url = el.attributes.href.value;
		el.addEventListener('click', function(event) {
			event.preventDefault();

			var xmlhttp = new XMLHttpRequest();

			xmlhttp.onreadystatechange = function() {
				if (xmlhttp.readyState == XMLHttpRequest.DONE ) {
					if (xmlhttp.status == 200) {
						callback(xmlhttp.responseText);
					} else if (xmlhttp.status == 400) {
						console.log('There was an error 400');
					} else {
						console.log('something else other than 200 was returned');
						console.log(xmlhttp.responseText);
					}
				}
			};

			xmlhttp.open("GET", url, true);
			xmlhttp.send();
		}, false);
	});
}

ajaxify('a.event', function(response){
	var container = document.querySelector('.event-popup-content');
	container.innerHTML = "";
	var doc = new DOMParser().parseFromString(response, 'text/html');
	var content = doc.documentElement.querySelector('section.event');
	container.appendChild(content);
	addClass(document.querySelector('body'), 'popup-active');
});

document.querySelector('.close-popup').addEventListener('click', function(event) {
	removeClass(document.querySelector('body'), 'popup-active');
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInV0aWxpdGllcy5qcyIsImFqYXguanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FDakJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoic2NyaXB0Lm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIEFkZCBjbGFzcyByYXcgamF2YXNjcmlwdCAqL1xuXG5mdW5jdGlvbiBoYXNDbGFzcyhlbGUsY2xzKSB7XG4gICAgcmV0dXJuICEhZWxlLmNsYXNzTmFtZS5tYXRjaChuZXcgUmVnRXhwKCcoXFxcXHN8XiknK2NscysnKFxcXFxzfCQpJykpO1xufVxuXG5mdW5jdGlvbiByZW1vdmVDbGFzcyhlbGVtZW50LCBjbGFzc05hbWUpIHtcbiAgICBpZiAoZWxlbWVudCAmJiBoYXNDbGFzcyhlbGVtZW50LGNsYXNzTmFtZSkpIHtcbiAgICAgICAgdmFyIHJlZyA9IG5ldyBSZWdFeHAoJyhcXFxcc3xeKScrY2xhc3NOYW1lKycoXFxcXHN8JCknKTtcbiAgICAgICAgZWxlbWVudC5jbGFzc05hbWUgPSAnICcgKyBlbGVtZW50LmNsYXNzTmFtZS5yZXBsYWNlKHJlZywnJykgKyAnICc7XG4gICAgfVxufVxuXG5mdW5jdGlvbiBhZGRDbGFzcyhlbGVtZW50LCBjbGFzc05hbWUpIHtcbiAgICBpZiAoZWxlbWVudCAmJiAhaGFzQ2xhc3MoZWxlbWVudCxjbGFzc05hbWUpKSB7XG4gICAgICAgIGVsZW1lbnQuY2xhc3NOYW1lICs9ICcgICcrIGNsYXNzTmFtZSArICcgICc7XG4gICAgfVxufSIsIlxuXG5mdW5jdGlvbiBhamF4aWZ5KGxpbmtFbCwgY2FsbGJhY2spIHtcblx0ZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChsaW5rRWwpLmZvckVhY2goZnVuY3Rpb24oZWwpIHtcblx0XHR2YXIgdXJsID0gZWwuYXR0cmlidXRlcy5ocmVmLnZhbHVlO1xuXHRcdGVsLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24oZXZlbnQpIHtcblx0XHRcdGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG5cblx0XHRcdHZhciB4bWxodHRwID0gbmV3IFhNTEh0dHBSZXF1ZXN0KCk7XG5cblx0XHRcdHhtbGh0dHAub25yZWFkeXN0YXRlY2hhbmdlID0gZnVuY3Rpb24oKSB7XG5cdFx0XHRcdGlmICh4bWxodHRwLnJlYWR5U3RhdGUgPT0gWE1MSHR0cFJlcXVlc3QuRE9ORSApIHtcblx0XHRcdFx0XHRpZiAoeG1saHR0cC5zdGF0dXMgPT0gMjAwKSB7XG5cdFx0XHRcdFx0XHRjYWxsYmFjayh4bWxodHRwLnJlc3BvbnNlVGV4dCk7XG5cdFx0XHRcdFx0fSBlbHNlIGlmICh4bWxodHRwLnN0YXR1cyA9PSA0MDApIHtcblx0XHRcdFx0XHRcdGNvbnNvbGUubG9nKCdUaGVyZSB3YXMgYW4gZXJyb3IgNDAwJyk7XG5cdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdGNvbnNvbGUubG9nKCdzb21ldGhpbmcgZWxzZSBvdGhlciB0aGFuIDIwMCB3YXMgcmV0dXJuZWQnKTtcblx0XHRcdFx0XHRcdGNvbnNvbGUubG9nKHhtbGh0dHAucmVzcG9uc2VUZXh0KTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH07XG5cblx0XHRcdHhtbGh0dHAub3BlbihcIkdFVFwiLCB1cmwsIHRydWUpO1xuXHRcdFx0eG1saHR0cC5zZW5kKCk7XG5cdFx0fSwgZmFsc2UpO1xuXHR9KTtcbn1cblxuYWpheGlmeSgnYS5ldmVudCcsIGZ1bmN0aW9uKHJlc3BvbnNlKXtcblx0dmFyIGNvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5ldmVudC1wb3B1cC1jb250ZW50Jyk7XG5cdGNvbnRhaW5lci5pbm5lckhUTUwgPSBcIlwiO1xuXHR2YXIgZG9jID0gbmV3IERPTVBhcnNlcigpLnBhcnNlRnJvbVN0cmluZyhyZXNwb25zZSwgJ3RleHQvaHRtbCcpO1xuXHR2YXIgY29udGVudCA9IGRvYy5kb2N1bWVudEVsZW1lbnQucXVlcnlTZWxlY3Rvcignc2VjdGlvbi5ldmVudCcpO1xuXHRjb250YWluZXIuYXBwZW5kQ2hpbGQoY29udGVudCk7XG5cdGFkZENsYXNzKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2JvZHknKSwgJ3BvcHVwLWFjdGl2ZScpO1xufSk7XG5cbmRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jbG9zZS1wb3B1cCcpLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24oZXZlbnQpIHtcblx0cmVtb3ZlQ2xhc3MoZG9jdW1lbnQucXVlcnlTZWxlY3RvcignYm9keScpLCAncG9wdXAtYWN0aXZlJyk7XG59KTsiXX0=
